<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wIKvAAAAAElFTkSuQmCC
</value>
  </data>
</root>